int minCost(int idx,vector<int>&cost,vector<int>&dp)
    {
        if(idx == 1 || idx == 0)
        {
            return cost[idx];
        }

        if(dp[idx] != -1)
        {
            return dp[idx];
        }

        return dp[idx] = min(minCost(idx-1,cost,dp) + cost[idx],minCost(idx-2,cost,dp) + cost[idx]);
    }

    int minCostClimbingStairs(vector<int>& cost) {
        int idx = cost.size();
        cost.push_back(0);
        vector<int>dp(idx+1,0);

        dp[0] = 0;
        dp[1] = 0;
        for(int i = 2 ; i <= idx ; i++)
        {
            dp[i] = min(dp[i-1] + cost[i-1],dp[i-2] + cost[i-2]);
        }
        return dp[idx];
    }
