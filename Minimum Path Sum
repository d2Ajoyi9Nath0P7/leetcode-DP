int solve(vector<vector<int>>&grid,int row,int col,vector<vector<int>>&dp)
    {
        if(row == 0 && col == 0){
            return grid[row][col];
        }
        if(row < 0 || col < 0){
            return INT_MAX;
        }
        if(dp[row][col] != -1){
            return dp[row][col];
        }
        int left = solve(grid,row,col-1,dp);
        int right = solve(grid,row-1,col,dp);

        return dp[row][col] =  grid[row][col] + min(left,right);
    }

    int minPathSum(vector<vector<int>>& grid) {
        int row = grid.size();
        int col = grid[0].size();
        vector<vector<int>>dp(row,vector<int>(col,-1));
        return solve(grid,row-1,col-1,dp);
    }
