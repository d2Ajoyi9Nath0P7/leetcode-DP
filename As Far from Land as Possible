int maxDistance(vector<vector<int>>& grid) {
        
        queue<pair<int,int>>q;
        
        for(int i = 0; i < grid.size() ;i++)
        {
            for(int j = 0; j < grid[0].size();j++)
            {
                if(grid[i][j] == 1)
                {
                    q.push({i,j});
                }
            }
        }
        
        int cnt = 0;
        
        while(!q.empty())
        {
            cnt++;//1
            int n = q.size();//4
            
            for(int i = 0; i < n; i++)
            {
                int x = q.front().first;
                int y = q.front().second;
                
                q.pop();
                
                if(x - 1 >= 0 && grid[x-1][y] == 0)
                {
                    grid[x-1][y] = 1;
                    q.push({x-1,y});
                }
                if(y + 1 < grid[0].size() && grid[x][y+1] == 0)
                {
                    grid[x][y+1] = 1;
                    q.push({x,y+1});
                }
                if(x + 1 < grid.size() && grid[x+1][y] == 0)
                {
                    grid[x+1][y] = 1;
                    q.push({x+1,y});
                }
                if( y - 1 >= 0 && grid[x][y-1] == 0)
                {
                    grid[x][y-1] = 1;
                    q.push({x,y-1});
                }
            }
        }
        
        if(cnt > 1)
        {
            return cnt-1;
        }
        else{
            return -1;
        }
       
    }
