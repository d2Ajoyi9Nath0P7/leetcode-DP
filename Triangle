int solve(vector<vector<int>>&triangle,int row,int col,int n,vector<vector<int>>&dp)
    {
        if(row == n-1){
            return triangle[row][col];
        }
        if(dp[row][col] != -1){
            return dp[row][col];
        }
        int down = triangle[row][col] + solve(triangle,row+1,col,n,dp);
        int dig = triangle[row][col] + solve(triangle,row+1,col+1,n,dp);

        return dp[row][col] = min(down,dig);
    }

    int minimumTotal(vector<vector<int>>& triangle)
     {
        int row = triangle.size();
        int col = triangle.size();
        int n = row;

        vector<vector<int>>dp(row,vector<int>(col,-1));
        return solve(triangle,0,0,n,dp);
    }
